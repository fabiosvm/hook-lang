name: CI

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

jobs:
  ubuntu-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Installing dependencies
      run: |
        sudo apt-get install -y libcurl4-openssl-dev
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Debug
    - name: Build
      run: cmake --build ${{github.workspace}}/build
    - name: Running tests
      run: ./run-tests
      env:
        HOOK_HOME: ${{github.workspace}}
    - name: Code coverage
      run: |
        gcov src/*.c
        bash <(curl -s https://codecov.io/bash)
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    - name: Packing
      run: |
        cpack --config build/CPackConfig.cmake
        cpack --config build/CPackSourceConfig.cmake

  windows-build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Installing dependencies
      run: |
        git clone https://github.com/microsoft/vcpkg
        cd vcpkg
        bootstrap-vcpkg.bat
        vcpkg integrate install
        vcpkg install curl:x64-windows
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -S . -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake
    - name: Build
      run: cmake --build ${{github.workspace}}/build
    - name: Packing
      run: |
        cpack --config build/CPackConfig.cmake
        cpack --config build/CPackSourceConfig.cmake

  macos-build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build
    - name: Build
      run: cmake --build ${{github.workspace}}/build
    - name: Running tests
      run: ./run-tests
      env:
        HOOK_HOME: ${{github.workspace}}
    - name: Packing
      run: |
        cpack --config build/CPackConfig.cmake
        cpack --config build/CPackSourceConfig.cmake
