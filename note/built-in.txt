
print(val: value)
println(val: value)
type(val: value) -> string
bool(val: value) -> boolean
int(val: number|string) -> integer
float(val: number|string) -> number
str(val: null|boolean|number|string) -> string
ord(val: string) -> integer
chr(val: integer) -> string
cap(val: string|array) -> integer
len(val: string|array) -> integer
is_empty(val: string|array) -> boolean
hash(str: string) -> integer
compare(val1: value, val2: value) -> integer
lower(str: string) -> string
upper(str: string) -> string
trim(str: string) -> string
slice(val: string|array, start: integer, stop: integer) -> string|array
array(min_capacity: integer) -> array
index_of(arr: array, elem: value) -> integer
sleep(ms: integer)
assert(assertion: value, msg: string)
panic(msg: string)
require(lib: string) -> instance
