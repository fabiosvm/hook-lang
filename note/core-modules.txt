
math:

  Pi: number

  abs(num: number) -> number
  floor(num: number) -> number
  ceil(num: number) -> number
  pow(base: number, power: number) -> number
  sqrt(num: number) -> number
  random() -> number

os:

  ClocksPerSecond: number

  clock() -> number
  system(cmd: string) -> number
  getenv(var: string) -> string

io:

  StdIn: userdata
  StdOut: userdata
  StdErr: userdata
  SeekSet: number
  SeekCurrent: number
  SeekEnd: number

  open(filename: string, mode: string) -> nil|userdata
  close(stream: userdata) -> number
  popen(command: string, mode: string) -> nil|userdata
  pclose(stream: userdata) -> number
  eof(stream: userdata) -> boolean
  flush(stream: userdata) -> number
  sync(stream: userdata) -> boolean
  tell(stream: userdata) -> integer
  rewind(stream: userdata)
  seek(stream: userdata, offset: number, whence: number) -> number
  read(stream: userdata, size: number) -> nil|string
  write(stream: userdata, str: string) -> nil|number
  readln(stream: userdata) -> string
  writeln(stream: userdata, str: string) -> nil|number

strings:

  hash(str: string) -> integer
  lower(str: string) -> string
  upper(str: string) -> string
  trim(str: string) -> string
  starts_with(str1: string, str1: string) -> boolean
  ends_with(str1: string, str1: string) -> boolean

arrays:

  new_array(min_capacity: integer) -> array
  index_of(arr: array, elem: value) -> integer
  min(arr: array) -> value
  max(arr: array) -> value
  sum(arr: array) -> number
